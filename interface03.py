# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'interface03.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QFileDialog
from PyQt5.QtGui import QPixmap
from PyQt5.QtWidgets import QApplication, QGraphicsScene, QGraphicsView
from PyQt5.QtGui import QPainter
from PyQt5.QtCore import QRectF
from main import rez

class Ui_Dialog(object):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(819, 477)
        self.textEdit = QtWidgets.QTextEdit(Dialog)
        self.textEdit.setGeometry(QtCore.QRect(30, 320, 151, 31))
        self.textEdit.setObjectName("textEdit")
        self.spinBox = QtWidgets.QSpinBox(Dialog)
        self.spinBox.setGeometry(QtCore.QRect(180, 320, 51, 31))
        self.spinBox.setObjectName("spinBox")
        self.textEdit_2 = QtWidgets.QTextEdit(Dialog)
        self.textEdit_2.setGeometry(QtCore.QRect(30, 400, 361, 31))
        self.textEdit_2.setObjectName("textEdit_2")
        self.spinBox_2 = QtWidgets.QSpinBox(Dialog)
        self.spinBox_2.setGeometry(QtCore.QRect(390, 400, 51, 31))
        self.spinBox_2.setObjectName("spinBox_2")
        self.textEdit_3 = QtWidgets.QTextEdit(Dialog)
        self.textEdit_3.setGeometry(QtCore.QRect(30, 360, 231, 31))
        self.textEdit_3.setObjectName("textEdit_3")
        self.spinBox_3 = QtWidgets.QSpinBox(Dialog)
        self.spinBox_3.setGeometry(QtCore.QRect(260, 360, 51, 31))
        self.spinBox_3.setObjectName("spinBox_3")
        self.pushButton = QtWidgets.QPushButton(Dialog)
        self.pushButton.setGeometry(QtCore.QRect(30, 260, 241, 31))
        self.pushButton.setObjectName("pushButton")
        self.pushButton_2 = QtWidgets.QPushButton(Dialog)
        self.pushButton_2.setGeometry(QtCore.QRect(290, 260, 241, 31))
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_3 = QtWidgets.QPushButton(Dialog)
        self.pushButton_3.setGeometry(QtCore.QRect(550, 260, 241, 31))
        self.pushButton_3.setObjectName("pushButton_3")
        self.pushButton_4 = QtWidgets.QPushButton(Dialog)
        self.pushButton_4.setGeometry(QtCore.QRect(550, 400, 241, 31))
        self.pushButton_4.setObjectName("pushButton_4")
        self.graphicsView = QtWidgets.QGraphicsView(Dialog)
        self.graphicsView.setGeometry(QtCore.QRect(30, 60, 241, 181))
        self.graphicsView.setObjectName("graphicsView")
        self.graphicsView_2 = QtWidgets.QGraphicsView(Dialog)
        self.graphicsView_2.setGeometry(QtCore.QRect(290, 60, 241, 181))
        self.graphicsView_2.setObjectName("graphicsView_2")
        self.graphicsView_3 = QtWidgets.QGraphicsView(Dialog)
        self.graphicsView_3.setGeometry(QtCore.QRect(550, 60, 241, 181))
        self.graphicsView_3.setObjectName("graphicsView_3")
        self.pushButton.clicked.connect(self.load_image) # для кнопки загрузки изображения
        self.pushButton_3.clicked.connect(self.process_image)  # для кнопки обработки изображения
        self.pushButton_4.clicked.connect(self.save_image) # для кнопки сохранения
        self.pushButton_4.clicked.connect(self.zon_image(rez))
        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Dialog"))
        self.textEdit.setHtml(_translate("Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:9pt;\">Введите размер маски:</span></p></body></html>"))
        self.textEdit_2.setHtml(_translate("Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:9pt;\">Введите коэффициент увеличения центрального элемента:</span></p></body></html>"))
        self.textEdit_3.setHtml(_translate("Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; background-color:#ffffff;\"><span style=\" font-family:\'JetBrains Mono,monospace\'; font-size:9pt; color:#000000; background-color:#ffffff;\">Введите коэффициент для подьема:</span></p></body></html>"))
        self.pushButton.setText(_translate("Dialog", "Вставить изображение"))
        self.pushButton_2.setText(_translate("Dialog", "Обработать изображение"))
        self.pushButton_3.setText(_translate("Dialog", "Позонная обработка "))
        self.pushButton_4.setText(_translate("Dialog", "Сохранить изображение"))

    #функция для кнопки вставки изображения
    def load_image(self):
        file_dialog = QFileDialog()
        file_dialog.setWindowTitle("Open Image")
        file_dialog.setNameFilter("Images (*.png *.xpm *.jpg *.bmp)")
        file_dialog.setFileMode(QFileDialog.ExistingFile)

        if file_dialog.exec_() == QFileDialog.Accepted:
            # Получение выбранного пути файла
            file_path = file_dialog.selectedFiles()[0]
            scene = QGraphicsScene()
            # Загрузка изображения из выбранного файла
            pixmap = QPixmap(file_path)

            # выставляем размер изображения
            pixmap_item = scene.addPixmap(QPixmap(file_path).scaled(250, 200))
            self.graphicsView.setScene(scene)#= QGraphicsView(scene)


            # Отображение представления
            #view.show()
        else:
            return None
    #функция для кнопки сохранения изображения
    def save_image(self):


        pixmap = QPixmap(self.graphicsView.viewport().size())
        painter = QPainter(pixmap)
        self.graphicsView.render(painter, QRectF(pixmap.rect()),
        self.graphicsView.viewport().rect())
        painter.end()
        pixmap.save("image.jpg")

    def process_image(self):


         scene = QGraphicsScene()
             # Загрузка изображения из выбранного файла
         pixmap = QPixmap(rez)

             # выставляем размер изображения
         pixmap_item = scene.addPixmap(QPixmap(pixmap).scaled(250, 200))
         self.graphicsView_2.setScene(scene)#= QGraphicsView(scene)

    #позонная обработка
    def zon_image(self, rez):
        fragment = rez[100:200, 100:200]
        scene = QGraphicsScene()
        pixmap = QPixmap(fragment)
        scene.addPixmap(pixmap)

        sys.exit(app.exec_())
if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Dialog = QtWidgets.QDialog()
    ui = Ui_Dialog()
    ui.setupUi(Dialog)
    Dialog.show()
    sys.exit(app.exec_())
